name: Rosetta Build for Intel Mac (x86_64)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with: 
          repository: 'hn-88/OpenSpace'
          ref: 'ToCompileOnMacOS'
          submodules: 'recursive'

      - name: Install Rosetta 2
        run: |
          /usr/sbin/softwareupdate --install-rosetta --agree-to-license

      - name: Uninstall conflicting ARM64 Homebrew packages
        run: |
          # brew uninstall glew boost freeimage vulkan-headers vulkan-loader brotli gdal glm
          # brew autoremove
          while [[ `brew list | wc -l` -ne 0 ]]; do
              for EACH in `brew list`; do
                  brew uninstall --force --ignore-dependencies $EACH
              done
          done


      - name: Install x86_64 Homebrew under Rosetta to /usr/local
        run: |
          arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" </dev/null
          echo 'eval "$(/usr/local/bin/brew shellenv)"' >> "$HOME/.profile"
          echo 'eval "$(/usr/local/bin/brew shellenv)"' >> "$HOME/.zprofile"

      - name: Load x86_64 Homebrew shell environment
        run: |
          eval "$(/usr/local/bin/brew shellenv)"
          arch -x86_64 brew doctor || true
          arch -x86_64 brew config

      - name: Install dependencies (x86_64)
        run: |
          eval "$(/usr/local/bin/brew shellenv)"
          arch -x86_64 brew install cmake glew boost freeimage mpv vulkan-headers vulkan-loader brotli gdal glm qt@6

     # - name: Configure OpenSpace with CMake (x86_64)
     #   run: |
     #     eval "$(/usr/local/bin/brew shellenv)"
     #     mkdir -p build
     #     cd build
     #     arch -x86_64 cmake .. \
     #       -DCMAKE_OSX_ARCHITECTURES=x86_64 \
     #       -DCMAKE_PREFIX_PATH="/usr/local/opt/qt@6;/usr/local/opt/boost;/usr/local/opt/glew" \
     #       -DCMAKE_BUILD_TYPE=Release

     # - name: Build OpenSpace (x86_64)
     #   run: |
     #     eval "$(/usr/local/bin/brew shellenv)"
     #     cd build
     #     arch -x86_64 cmake --build . --parallel
     
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          openSpaceHome="$HOME/source/OpenSpace"
          cd "$openSpaceHome/build"
          # https://stackoverflow.com/questions/16700415/cmake-generate-xcode-project-from-existing-sources
          # CMAKE_PREFIX_PATH to /opt/homebrew - https://stackoverflow.com/questions/68105648/configure-cmake-to-work-with-homebrew-libraries-instead-system-provided-librarie
          arch -x86_64  cmake -G Xcode -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -DCMAKE_CXX_STANDARD=20 -DONLY_ACTIVE_ARCH=YES -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=13.3 -DCMAKE_CXX_FLAGS="-Wno-error -D_FILE_OFFSET_BITS=64" -DCMAKE_C_FLAGS="-Wno-error -Wno-dev -D_FILE_OFFSET_BITS=64" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_PREFIX_PATH=/opt/homebrew -DBUILD_TESTS=OFF -DCOMPILE_WARNING_AS_ERROR=OFF -DOPENSPACE_HAVE_TESTS=OFF -DSGCT_BUILD_TESTS=OFF "$openSpaceHome"       
  
      - name: Build
        # Build your program with the given configuration
        run: |
          openSpaceHome="$HOME/source/OpenSpace"
          cd "$openSpaceHome/build"
          # echo "Check to see if we have enough disk space ... " only 8 GB used out of 120+ GB
          # df -h
          arch -x86_64 cmake --build . --config ${{env.BUILD_TYPE}} -- -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=13.3
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: OpenSpace-MacOS14-IntelMac
          # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: /Users/runner/source/OpenSpace/bin/Release/*.app
        
  
