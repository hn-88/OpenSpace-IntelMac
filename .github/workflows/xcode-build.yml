name: xcode-build

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # This yml is copied from https://github.com/hn-88/OpenSpace-AppImage/blob/main/.github/workflows/appimage-creation.yml
  # and modified. More inputs from https://github.com/hn-88/sgct-test-builds-v2/blob/9261286976f69f3e1e01c574dc31f461f21ec114/.github/workflows/cmake-xcode-intel-macos14.yml
  # sgct will not build cleanly with default macos-13 runner, so using macos-14
  BUILD_TYPE: Release
  OPENSPACE_VERSION: "0.21.post-rc1"
  THIS_REPO_PATH: "/Users/runner/work/OpenSpace-IntelMac/OpenSpace-IntelMac" 
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    
    - name: get openspace code for a particular release
      # https://docs.openspaceproject.com/releases-v0.20/contribute/development/compiling/macos.html
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        git clone --recursive https://github.com/OpenSpace/OpenSpace.git "$openSpaceHome"
        cd "$openSpaceHome"
        # use the main branch instead # git checkout "releases/v${OPENSPACE_VERSION}" --recurse-submodules
        git checkout "9d3bc5ac68148a53cba3315a3ae884b9a2a03b59" --recurse-submodules
        # update sgct to a commit which solves build issues
        cd "$openSpaceHome/apps/OpenSpace/ext/sgct"
        git checkout "265e4bb76ce1bd0e8cb28599e1a667aab2ef3622"
        cd "$openSpaceHome"
        mkdir build
        cd build
            
    - name: Install dependencies
      # https://docs.openspaceproject.com/releases-v0.20/contribute/development/compiling/ubuntu.html
      run: |
        brew install glew boost freeimage mpv vulkan-headers vulkan-loader brotli gdal qt@6

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        cd "$openSpaceHome/build"
        # https://stackoverflow.com/questions/16700415/cmake-generate-xcode-project-from-existing-sources
        # CMAKE_PREFIX_PATH to /opt/homebrew - https://stackoverflow.com/questions/68105648/configure-cmake-to-work-with-homebrew-libraries-instead-system-provided-librarie
        cmake -G Xcode -DCMAKE_POLICY_VERSION_MINIMUM=3.5 -DONLY_ACTIVE_ARCH=YES -DCMAKE_CXX_FLAGS="-Wno-error -D_FILE_OFFSET_BITS=64" -DCMAKE_C_FLAGS="-Wno-error -Wno-dev -D_FILE_OFFSET_BITS=64" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_PREFIX_PATH=/opt/homebrew -DBUILD_TESTS=OFF -DCOMPILE_WARNING_AS_ERROR=OFF -DOPENSPACE_HAVE_TESTS=OFF -DSGCT_BUILD_TESTS=OFF -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=13.3 "$openSpaceHome" 
        

    - name: Build
      # Build your program with the given configuration
      run: |
        openSpaceHome="$HOME/source/OpenSpace"
        cd "$openSpaceHome/build"
        # echo "Check to see if we have enough disk space ... " only 8 GB used out of 120+ GB
        # df -h
        cmake --build . --config ${{env.BUILD_TYPE}} -- -DCMAKE_OSX_ARCHITECTURES=x86_64
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: OpenSpace-MacOS14-Intel
        # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: $HOME/source/OpenSpace/*
      
    
